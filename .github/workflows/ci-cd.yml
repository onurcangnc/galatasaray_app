name: CI/CD Pipeline for .NET 9 API on Windows 2022

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    # Self-hosted Windows runner'ınızın etiketlerinin "self-hosted" ve "windows" olduğundan emin olun.
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Eğer makinenizde zaten .NET 9 SDK yüklüyse bu adımı kaldırabilirsiniz.
      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal

      # Uygulamayı "dotnet run" ile çalıştıracağımız için publish adımına gerek yok.
      #- name: Publish Application
      #  run: dotnet publish --configuration Release --no-build --output ./publish

      - name: Deploy Application
        shell: powershell
        run: |
          Write-Host "Uygulama başlatılıyor (dotnet run ile)..."
          
          # Mevcut çalışan uygulama varsa sonlandırmak (aynı projenin daha önce çalışıyor olması durumunda):
          $existingProcess = Get-Process -Name "dotnet" -ErrorAction SilentlyContinue | Where-Object { $_.Path -like "*MyDotNet9Api.dll" }
          if ($existingProcess) {
              Write-Host "Çalışan uygulama bulundu. Sonlandırılıyor..."
              $existingProcess | ForEach-Object { $_.Kill() }
          }

          # Uygulamayı proje dizininde (GITHUB_WORKSPACE) dotnet run ile başlatıyoruz.
          Write-Host "Proje dizininde dotnet run komutu çalıştırılıyor..."
          Start-Process -FilePath "dotnet" -ArgumentList "run" -NoNewWindow -WorkingDirectory $env:GITHUB_WORKSPACE
